{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil Consolas;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}}{\colortbl;\red0\green0\blue255;\red63\green127\blue95;\red0\green0\blue0;\red127\green0\blue85;\red106\green62\blue62;\red0\green0\blue192;\red42\green0\blue255;\red255\green255\blue255;}


\pard\fi0\li360\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf3 Arrays\uc2\u24037 \'b9\'a4\u20855 \'be\'df\u31867 \'c0\'e0\uc1
\par \pard\fi0\li360\ql\ri0\sb0\sa0\itap0 
\par \plain \f0\fs30 1.\uc2\u29702 \'c0\'ed\u35299 \'bd\'e2\u65306 \'a3\'ba\uc1
\par \plain \f0\fs21 \uc2\u23450 \'b6\'a8\u20041 \'d2\'e5\u22312 \'d4\'dajava.util\u21253 \'b0\'fc\u19979 \'cf\'c2\u12290 \'a1\'a3Arrays:\u25552 \'cc\'e1\u20379 \'b9\'a9\u20102 \'c1\'cb\u24456 \'ba\'dc\u22810 \'b6\'e0\u25805 \'b2\'d9\u20316 \'d7\'f7\u25968 \'ca\'fd\u32452 \'d7\'e9\u30340 \'b5\'c4\u26041 \'b7\'bd\u27861 \'b7\'a8\u12290 \'a1\'a3\uc1
\par 
\par \uc2\u24120 \'b3\'a3\u29992 \'d3\'c3\u30340 \'b5\'c4\u26041 \'b7\'bd\u27861 \'b7\'a8\uc1
\par \plain \f1\fs32\cf2 //1.boolean equals(\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2 [] a,\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2 [] b):\uc2\u21028 \'c5\'d0\u26029 \'b6\'cf\u20004 \'c1\'bd\u20010 \'b8\'f6\u25968 \'ca\'fd\u32452 \'d7\'e9\u26159 \'ca\'c7\u21542 \'b7\'f1\u30456 \'cf\'e0\u31561 \'b5\'c8\u12290 \'a1\'a3\uc1
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 \plain \f1\fs32\cf3 \tab \tab \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3 [] \plain \f1\fs32\cf5 arr1\plain \f1\fs32\cf3  = \plain \f1\b\fs32\cf4 new\plain \f1\fs32\cf3  \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3 []\{1,2,3,4\};
\par \tab \tab \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3 [] \plain \f1\fs32\cf5 arr2\plain \f1\fs32\cf3  = \plain \f1\b\fs32\cf4 new\plain \f1\fs32\cf3  \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3 []\{1,3,2,4\};
\par \tab \tab \plain \f1\b\fs32\cf4 boolean\plain \f1\fs32\cf3  \plain \f1\fs32\cf5 isEquals\plain \f1\fs32\cf3  = Arrays.\plain \f1\i\fs32\cf3 equals\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr1\plain \f1\fs32\cf3 , \plain \f1\fs32\cf5 arr2\plain \f1\fs32\cf3 );
\par \tab \tab System.\plain \f1\b\i\fs32\cf6 out\plain \f1\fs32\cf3 .println(\plain \f1\fs32\cf5 isEquals\plain \f1\fs32\cf3 );
\par \tab \tab 
\par \tab \tab \plain \f1\fs32\cf2 //2.String toString(\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2 [] a):\uc2\u36755 \'ca\'e4\u20986 \'b3\'f6\u25968 \'ca\'fd\u32452 \'d7\'e9\u20449 \'d0\'c5\u24687 \'cf\'a2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs32\cf3 \tab \tab System.\plain \f1\b\i\fs32\cf6 out\plain \f1\fs32\cf3 .println(Arrays.\plain \f1\i\fs32\cf3 toString\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr1\plain \f1\fs32\cf3 ));
\par \tab \tab 
\par \tab \tab \tab 
\par \tab \tab \plain \f1\fs32\cf2 //3.void fill(\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2 [] a,\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2  \plain \f1\ul\fs32\cf2 val\plain \f1\fs32\cf2 ):\uc2\u23558 \'bd\'ab\u25351 \'d6\'b8\u23450 \'b6\'a8\u20540 \'d6\'b5\u22635 \'cc\'ee\u20805 \'b3\'e4\u21040 \'b5\'bd\u25968 \'ca\'fd\u32452 \'d7\'e9\u20043 \'d6\'ae\u20013 \'d6\'d0\u12290 \'a1\'a3\uc1
\par \plain \f1\fs32\cf3 \tab \tab Arrays.\plain \f1\i\fs32\cf3 fill\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr1\plain \f1\fs32\cf3 ,10);
\par \tab \tab System.\plain \f1\b\i\fs32\cf6 out\plain \f1\fs32\cf3 .println(Arrays.\plain \f1\i\fs32\cf3 toString\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr1\plain \f1\fs32\cf3 ));
\par \tab \tab 
\par \plain \f1\fs32 
\par \plain \f1\fs32\cf3 \tab \tab \plain \f1\fs32\cf2 //4.void sort(\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2 [] a):\uc2\u23545 \'b6\'d4\u25968 \'ca\'fd\u32452 \'d7\'e9\u36827 \'bd\'f8\u34892 \'d0\'d0\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs32\cf3 \tab \tab Arrays.\plain \f1\i\fs32\cf3 sort\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr2\plain \f1\fs32\cf3 );
\par \tab \tab System.\plain \f1\b\i\fs32\cf6 out\plain \f1\fs32\cf3 .println(Arrays.\plain \f1\i\fs32\cf3 toString\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr2\plain \f1\fs32\cf3 ));
\par \tab \tab 
\par \tab \tab \plain \f1\fs32\cf2 //5.\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2  binarySearch(\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2 [] a,\plain \f1\ul\fs32\cf2 int\plain \f1\fs32\cf2  key)
\par \plain \f1\fs32\cf3 \tab \tab \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3 [] \plain \f1\fs32\cf5 arr3\plain \f1\fs32\cf3  = \plain \f1\b\fs32\cf4 new\plain \f1\fs32\cf3  \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3 []\{-98,-34,2,34,54,66,79,105,210,333\};
\par \tab \tab \plain \f1\b\fs32\cf4 int\plain \f1\fs32\cf3  \plain \f1\fs32\cf5 index\plain \f1\fs32\cf3  = Arrays.\plain \f1\i\fs32\cf3 binarySearch\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 arr3\plain \f1\fs32\cf3 , 210);
\par \tab \tab \plain \f1\b\fs32\cf4 if\plain \f1\fs32\cf3 (\plain \f1\fs32\cf5 index\plain \f1\fs32\cf3  >= 0)\{
\par \tab \tab \tab System.\plain \f1\b\i\fs32\cf6 out\plain \f1\fs32\cf3 .println(\plain \f1\fs32\cf5 index\plain \f1\fs32\cf3 );
\par \tab \tab \}\plain \f1\b\fs32\cf4 else\plain \f1\fs32\cf3 \{
\par \tab \tab \tab System.\plain \f1\b\i\fs32\cf6 out\plain \f1\fs32\cf3 .println(\plain \f1\fs32\cf7 "\uc2\u26410 \'ce\'b4\u25214 \'d5\'d2\u21040 \'b5\'bd"\uc1\plain \f1\fs32\cf3 );
\par \tab \tab \}\par}